// Generated by CoffeeScript 1.6.3
(function() {
  'use strict';
  var controller, html;

  html = "<div class=\"row\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <form name=\"form\" class=\"form\" role=\"form\" ng-submit=\"signup(form)\" id=\"login-nav\"\n        novalidate>\n\n        <div class=\"form-group\">\n          <label class=\"sr-only\" for=\"name\">Name</label>\n          <input name=\"name\" type=\"text\" class=\"form-control\" id=\"name\" ng-model=\"model.name\"\n          placeholder=\"Full name\" required>\n          <span ng-show=\"form.name.$error.required && form.name.$dirty\">\n            Name is required\n          </span>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"sr-only\" for=\"email\">Email address</label>\n          <input name=\"email\" type=\"email\" class=\"form-control\" id=\"email\" ng-model=\"model.email\"\n          placeholder=\"Email address\" required>\n          <span ng-show=\"form.email.$error.required && form.email.$dirty\">\n            Email is required\n          </span>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"sr-only\" for=\"password\">Password</label>\n          <input type=\"password\" class=\"form-control\"  ng-model=\"model.password\"\n           ng-minlength=\"5\" ng-maxlength=\"20\" name=\"password\"\n          id=\"password\" placeholder=\"Password\" required>\n          <span ng-show=\"form.password.$error.required &&\n            form.password.$dirty\">Password is required</span>\n          <span ng-show=\"!form.password.$error.required &&\n            (form.password.$error.minlength ||\n            form.password.$error.maxlength) &&\n            form.password.$dirty\">Password must be between 5 and 20 characters.</span>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"sr-only\" for=\"confirmpassword\">Confirm Password</label>\n          <input type=\"password\" class=\"form-control\" name=\"confirmpassword\"\n          ng-model=\"model.confirmpassword\"\n          id=\"confirmpassword\" placeholder=\"Confirm Password\" required>\n          <span ng-show=\"form.confirmpassword.$error.required &&\n            form.confirmpassword.$dirty\">Please confirm your\n            password.</span>\n          <span ng-show=\"!form.confirmpassword.$error.required &&\n            form.confirmpassword.$error.nomatch &&\n            form.password.$dirty\">Passwords do not match.</span>\n        </div>\n        <div class=\"form-group\">\n          <button type=\"submit\" class=\"btn btn-success btn-block\">Sign up</button>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class=\"divider\"></div>\n  <div class=\"row\">\n    <input class=\"btn btn-primary btn-block\" type=\"button\"\n    id=\"sign-in-facebook\" value=\"Sign Up with Facebook\">\n    </input>\n  </div>\n</div>";

  controller = function(root, scope) {
    scope.model = {};
    return scope.signup = function(form) {
      var user;
      if (form.$invalid) {
        return;
      }
      if (form.$valid && (scope.model.password !== scope.model.confirmpassword)) {
        form.confirmpassword.$error.nomatch = true;
        return;
      }
      delete scope.model.confirmpassword;
      user = new Parse.User();
      user.set("name", scope.model.name);
      user.set("username", scope.model.email);
      user.set("password", scope.model.password);
      user.set("email", scope.model.email);
      user.set("ACL", new Parse.ACL());
      return user.signUp(null, {
        success: function(user) {
          root.user = user;
          return root.go('/');
        },
        error: function(user, error) {
          return alert("Invalid username or password. Please try again.");
        }
      });
    };
  };

  angular.module("dng.parse").directive("register", function() {
    return {
      template: html,
      restrict: "E",
      replace: true,
      scope: true,
      controller: ['$rootScope', '$scope', controller]
    };
  });

}).call(this);

/*
//@ sourceMappingURL=register.map
*/
